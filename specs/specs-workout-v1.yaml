openapi: 3.0.4
info:
  title: Workout App
  description: Workout app for young IT-specialists for trainings and health
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: workout
    description: Тренировка
  - name: feedback
    description: Everything about your Pets
paths:
  /workouts/create:
    post:
      tags:
        - workout
      summary: Create workout
      operationId: workoutCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutCreateRequest"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkoutCreateResponse"


components:
  schemas:
    Equipment:
      type: string
      description: Equipment required for training
      enum:
        - OwnWeight
        - Dumbbells
        - JumpingRope
        - HorizontalBar
        - Bars

    WorkoutType:
      type: string
      description: Workout muscle group
      enum:
        - Core
        - Arms
        - Legs

    Feedback:
      type: object
      description: User's feedback of the training
      properties:
        review:
          type: string
          description: User's comment of the training
        rating:
          type: number
          description: User's rating of the training

    UserId:
      type: string
      description: Current user's identifier

    WorkoutId:
      type: string
      description: Current training's identifier

    FeedbackId:
      type: string
      description: Current feedback's identifier

    WorkoutBase:
      type: object
      description: Workout
      properties:
        title:
          type: string
          description: Title of the training
        description:
          type: string
          description: Brief description of the training
        type:
          $ref: "#/components/schemas/WorkoutType"
        equipment:
          $ref: "#/components/schemas/Equipment"
        content:
          type: object
          description: Training content
          properties:
            video:
              type: string
              description: Video content of training
            steps:
              type: array
              items:
                $ref: "#/components/schemas/WorkoutStep"

    WorkoutStep:
      type: object
      properties:
        title:
          type: string
          description: Title of the training step
        description:
          type: string
          description: Description of the current step
        timecode:
          type: string
          description: Timecode on the video of current step execution (mm:ss format)

    Workout:
      allOf:
        - $ref: "#/components/schemas/WorkoutBase"
        - type: object
          properties:
            feedback:
              type: array
              items:
                $ref: "#/components/schemas/Feedback"
            rating:
              type: number
              description: Common rating of the training based on users' ratings

    Request:
      type: object
      description: Basic interface for all requests
      properties:
        requestType:
          type: string
          description: Discriminator field for detection type of request
          example: workoutCreate
        requestId:
          type: string
          description: Request identifier for debugging
      discriminator:
        propertyName: requestType
        mapping:
          workoutCreate: "#/components/schemas/WorkoutCreateRequest"
          workoutRead: "#/components/schemas/WorkoutReadRequest"
          workoutUpdate: "#/components/schemas/WorkoutUpdateRequest"
          workoutSearch: "#/components/schemas/WorkoutSearchRequest"
          feedbackCreate: "#/components/schemas/FeedbackCreateRequest"
          feedbackRead: "#/components/schemas/FeedbackReadRequest"
          feedbackUpdate: "#/components/schemas/FeedbackUpdateRequest"
          feedbackDelete: "#/components/schemas/FeedbackDeleteRequest"

    Response:
      type: object
      description: Basic interface for all responses
      properties:
        responseType:
          type: string
          description: Discriminator field for detection type of request
          example: workoutCreate
        requestId:
          type: string
          description: Request identifier for debugging
        result:
          $ref: "./schemas/result.yaml#/Result"
        errors:
          type: array
          items:
            $ref: "./schemas/error.yaml#/Error"
      discriminator:
        propertyName: responseType
        mapping:
          workoutCreate: "#/components/schemas/WorkoutCreateResponse"
          workoutRead: "#/components/schemas/WorkoutReadResponse"
          workoutUpdate: "#/components/schemas/WorkoutUpdateResponse"
          workoutSearch: "#/components/schemas/WorkoutSearchResponse"
          feedbackCreate: "#/components/schemas/FeedbackCreateResponse"
          feedbackRead: "#/components/schemas/FeedbackReadResponse"
          feedbackUpdate: "#/components/schemas/FeedbackUpdateResponse"
          feedbackDelete: "#/components/schemas/FeedbackDeleteResponse"

    WorkoutCreateRequestPayload:
      type: object
      properties:
        workout:
          $ref: "#/components/schemas/WorkoutBase"

    WorkoutCreateRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/WorkoutCreateRequestPayload"

    WorkoutReadRequestPayload:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/WorkoutId"

    WorkoutUpdateRequestPayload:
      type: object
      properties:
        workout:
          allOf:
            - $ref: "#/components/schemas/WorkoutId"
            - $ref: "#/components/schemas/Workout"

    FeedbackCreateRequestPayload:
      allOf:
        - type: object
          properties:
            workout:
              $ref: "#/components/schemas/WorkoutId"
            user:
              $ref: "#/components/schemas/UserId"
        - $ref: "#/components/schemas/Feedback"

    FeedbackReadRequestPayload:
      allOf:
        - type: object
          properties:
            workout:
              $ref: "#/components/schemas/WorkoutId"

    FeedbackUpdateRequestPayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/FeedbackId"
            user:
              $ref: "#/components/schemas/UserId"
        - $ref: "#/components/schemas/Feedback"

    FeedbackDeleteRequestPayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/FeedbackId"
            user:
              $ref: "#/components/schemas/UserId"

    WorkoutCreateResponsePayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/WorkoutId"
        - $ref: "#/components/schemas/Workout"

    WorkoutUpdateResponsePayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/WorkoutId"
        - $ref: "#/components/schemas/Workout"

    WorkoutReadResponsePayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/WorkoutId"
        - $ref: "#/components/schemas/Workout"

    WorkoutSearchRequestPayload:
      type: object
      properties:
        groupBy:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/WorkoutType"
              - $ref: "#/components/schemas/Equipment"

    WorkoutSearchResponsePayload:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              groupName:
                anyOf:
                  - $ref: "#/components/schemas/WorkoutType"
                  - $ref: "#/components/schemas/Equipment"
              workouts:
                type: array
                items:
                  $ref: "#/components/schemas/Workout"

    FeedbackCreateResponsePayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/FeedbackId"
            user:
              $ref: "#/components/schemas/UserId"
            workout:
              $ref: "#/components/schemas/WorkoutId"
        - $ref: "#/components/schemas/Feedback"

    FeedbackReadResponsePayload:
      type: object
      properties:
        workout:
          $ref: "#/components/schemas/WorkoutId"
        feedback:
          type: array
          items:
            $ref: "#/components/schemas/Feedback"

    FeedbackUpdateResponsePayload:
      allOf:
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/FeedbackId"
            user:
              $ref: "#/components/schemas/UserId"
            workout:
              $ref: "#/components/schemas/WorkoutId"
        - $ref: "#/components/schemas/Feedback"

    FeedbackDeleteResponsePayload:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/FeedbackId"
        user:
          $ref: "#/components/schemas/UserId"
        workout:
          $ref: "#/components/schemas/WorkoutId"

    WorkoutReadRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/WorkoutReadRequestPayload"

    WorkoutUpdateRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/WorkoutUpdateRequestPayload"

    WorkoutSearchRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/WorkoutSearchRequestPayload"

    FeedbackCreateRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackCreateRequestPayload"

    FeedbackReadRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackReadRequestPayload"

    FeedbackUpdateRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackUpdateRequestPayload"

    FeedbackDeleteRequest:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackDeleteRequestPayload"

    WorkoutCreateResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - $ref: "#/components/schemas/WorkoutCreateResponsePayload"

    WorkoutReadResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - $ref: "#/components/schemas/WorkoutReadResponsePayload"

    WorkoutUpdateResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - $ref: "#/components/schemas/WorkoutUpdateResponsePayload"

    WorkoutSearchResponse:
      allOf:
        - $ref: "#/components/schemas/Response"
        - $ref: "#/components/schemas/WorkoutSearchResponsePayload"

    FeedbackCreateResponse:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackCreateResponsePayload"

    FeedbackReadResponse:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackReadResponsePayload"

    FeedbackUpdateResponse:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackUpdateResponsePayload"

    FeedbackDeleteResponse:
      allOf:
        - $ref: "#/components/schemas/Request"
        - $ref: "#/components/schemas/FeedbackDeleteResponsePayload"
#  /workouts/read:
#  /workouts/update:
#  /feedback/create:
#  /feedback/read:
#  /feedback/update:
#  /feedback/delete:
#  /ad/create:
#    post:
#      tags:
#        - ad
#      summary: Create ad
#      operationId: adCreate
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdCreateRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdCreateResponse'
#  /ad/read:
#    post:
#      tags:
#        - ad
#      summary: Read ad
#      operationId: adRead
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdReadRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdReadResponse'
#  /ad/update:
#    post:
#      tags:
#        - ad
#      summary: Update ad
#      operationId: adUpdate
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdUpdateRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdUpdateResponse'
#  /ad/delete:
#    post:
#      tags:
#        - ad
#      summary: Delete ad
#      operationId: adDelete
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdDeleteRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdDeleteResponse'
#  /ad/search:
#    post:
#      tags:
#        - ad
#      summary: Search ad
#      operationId: adSearch
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdSearchRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdSearchResponse'
#  /ad/offers:
#    post:
#      tags:
#        - ad
#      summary: Search offers
#      operationId: adOffers
#      requestBody:
#        description: Request body
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/AdOffersRequest'
#        required: true
#      responses:
#        200:
#          description: Success
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/AdOffersResponse'
#
#components:
#  schemas:
#
#    IRequest:
#      type: object
#      description: Базовый интерфейс для всех запросов
#      properties:
#        requestType:
#          type: string
#          description: Поле-дескриминатор для вычисления типа запроса
#          example: create
#        requestId:
#          type: string
#          description: Идентификатор запроса для отладки
#      discriminator:
#        propertyName: requestType
#        mapping:
#          create: '#/components/schemas/AdCreateRequest'
#          read:   '#/components/schemas/AdReadRequest'
#          update: '#/components/schemas/AdUpdateRequest'
#          delete: '#/components/schemas/AdDeleteRequest'
#          search: '#/components/schemas/AdSearchRequest'
#          offers: '#/components/schemas/AdOffersRequest'
#
#    Error:
#      type: object
#      properties:
#        code:
#          type: string
#        group:
#          type: string
#        field:
#          type: string
#        message:
#          type: string
#
#    ResponseResult:
#      type: string
#      enum:
#        - success
#        - error
#
#    IResponse:
#      type: object
#      description: Базовый интерфейс для всех ответов
#      properties:
#        responseType:
#          type: string
#          description: Поле-дескриминатор для вычисления типа запроса
#          example: create
#        requestId:
#          type: string
#          description: Идентификатор запроса для отладки
#        result:
#          $ref: '#/components/schemas/ResponseResult'
#        errors:
#          type: array
#          items:
#            $ref: '#/components/schemas/Error'
#
#      discriminator:
#        propertyName: responseType
#        mapping:
#          create: '#/components/schemas/AdCreateResponse'
#          read:   '#/components/schemas/AdReadResponse'
#          update: '#/components/schemas/AdUpdateResponse'
#          delete: '#/components/schemas/AdDeleteResponse'
#          search: '#/components/schemas/AdSearchResponse'
#          offers: '#/components/schemas/AdOffersResponse'
#          init: '#/components/schemas/AdInitResponse'
#
#
#    UserId:
#      type: string
#      description: Идентификатор пользователя
#    AdId:
#      type: string
#      description: Идентификатор объявления
#    AdLock:
#      type: string
#      description: Версия оптимистичной блокировки
#
#    BaseAd:
#      type: object
#      description: Объект описывает свойства, одинаковые для create и update
#      properties:
#        title:
#          type: string
#          description: Заголовок объявления
#        description:
#          type: string
#          description: Описание объявления
#        adType:
#          $ref: '#/components/schemas/DealSide'
#        visibility:
#          $ref: '#/components/schemas/AdVisibility'
#
#    DealSide:
#      type: string
#      description: 'Сторона сделки: спрос или предложение'
#      enum:
#        - demand
#        - supply
#
#    AdVisibility:
#      type: string
#      description: 'Тип видимости объявления. Возможные значения: видит только владелец, только зарегистрированный в системе пользователь, видимо всем'
#      enum:
#        - ownerOnly
#        - registeredOnly
#        - public
#
#    AdInitResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#
#    AdCreateObject:
#      allOf:
#        - $ref: '#/components/schemas/BaseAd'
#
#    AdCreateRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdCreateObject'
#
#    AdReadObject:
#      allOf:
#        - type: object
#          properties:
#            id:
#              $ref: '#/components/schemas/AdId'
#
#    AdReadRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdReadObject'
#
#    AdUpdateObject:
#      allOf:
#        - $ref: '#/components/schemas/BaseAd'
#        - type: object
#          properties:
#            id:
#              $ref: '#/components/schemas/AdId'
#            lock:
#              $ref: '#/components/schemas/AdLock'
#
#    AdUpdateRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdUpdateObject'
#
#    AdDeleteObject:
#      allOf:
#        - type: object
#          properties:
#            id:
#              $ref: '#/components/schemas/AdId'
#            lock:
#              $ref: '#/components/schemas/AdLock'
#
#    AdDeleteRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdDeleteObject'
#
#    AdSearchFilter:
#      type: object
#      description: Набор фильтров для поиска
#      properties:
#        searchString:
#          type: string
#          description: Поисковая строка, которая будет искаться в объявлениях
#
#    AdSearchRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            adFilter:
#              $ref: '#/components/schemas/AdSearchFilter'
#
#    AdOffersObject:
#      $ref: '#/components/schemas/AdReadObject'
#
#    AdOffersRequest:
#      allOf:
#        - $ref: '#/components/schemas/IRequest'
#        - $ref: '#/components/schemas/AdRequestDebug'
#        - type: object
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdOffersObject'
#
#    AdResponseObject:
#      allOf:
#        - $ref: '#/components/schemas/BaseAd'
#        - type: object
#          description: Объект, который возвращается в ответе бэкенда
#          properties:
#            id:
#              $ref: '#/components/schemas/AdId'
#            ownerId:
#              $ref: '#/components/schemas/UserId'
#            lock:
#              $ref: '#/components/schemas/AdLock'
#            permissions:
#              type: array
#              uniqueItems: true
#              items:
#                $ref: '#/components/schemas/AdPermissions'
#
#    AdPermissions:
#      type: string
#      description: Доступы для клиента для операций над объявлением
#      enum:
#        - read
#        - update
#        - delete
#        - makeVisiblePublic
#        - makeVisibleOwn
#        - makeVisibleGroup
#
#    AdResponseSingle:
#      allOf:
#        - type: object
#          description: Ответ с одним объектом объявления
#          properties:
#            ad:
#              $ref: '#/components/schemas/AdResponseObject'
#
#    AdResponseMulti:
#      allOf:
#        - type: object
#          description: Список найденных объектов
#          properties:
#            ads:
#              type: array
#              items:
#                $ref: '#/components/schemas/AdResponseObject'
#
#    AdCreateResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseSingle'
#
#    AdReadResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseSingle'
#
#    AdUpdateResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseSingle'
#
#    AdDeleteResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseSingle'
#
#    AdSearchResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseMulti'
#
#    AdOffersResponse:
#      allOf:
#        - $ref: '#/components/schemas/IResponse'
#        - $ref: '#/components/schemas/AdResponseSingle'
#        - $ref: '#/components/schemas/AdResponseMulti'
#
#    # STUBS ======================
#    AdRequestDebugMode:
#      type: string
#      enum:
#        - prod
#        - test
#        - stub
#
#    AdRequestDebug:
#      type: object
#      properties:
#        debug:
#          $ref: '#/components/schemas/AdDebug'
#
#    AdDebug:
#      type: object
#      properties:
#        mode:
#          $ref: '#/components/schemas/AdRequestDebugMode'
#        stub:
#          $ref: '#/components/schemas/AdRequestDebugStubs'
#
#    AdRequestDebugStubs:
#      type: string
#      description: Перечисления всех стабов
#      enum:
#        - success
#        - notFound
#        - badId
#        - badTitle
#        - badDescription
#        - badVisibility
#        - cannotDelete
#        - badSearchString